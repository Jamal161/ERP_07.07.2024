
@{
    ViewBag.Title = "DoctorVisitType";
}

@RenderPage("~/Views/Shared/Sidebar.cshtml")

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>Bootstrap CRUD Data Table for Database with Modal Form</title>
    <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Roboto|Varela+Round">
    <link rel="stylesheet" href="https://fonts.googleapis.com/icon?family=Material+Icons">
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css">
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.12.4/jquery.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <style>
        body {
            color: #566787;
            background: #f5f5f5;
            font-family: 'Varela Round', sans-serif;
            font-size: 13px;
            max-width: 100%;
        }

        .table-responsive {
            margin: 100px 0;
        }

        .table-wrapper {
            min-width: 1450px;
            background: #fff;
            padding: 20px 25px;
            border-radius: 3px;
            box-shadow: 0 1px 1px rgba(0,0,0,.05);
        }

        .table-title {
            padding-bottom: 15px;
            background: #435d7d;
            color: #fff;
            padding: 16px 30px;
            margin: -20px -25px 10px;
            border-radius: 3px 3px 0 0;
        }

            .table-title h2 {
                margin: 5px 0 0;
                font-size: 24px;
            }

            .table-title .btn-group {
                float: right;
            }

            .table-title .btn {
                color: #fff;
                float: right;
                font-size: 13px;
                border: none;
                min-width: 50px;
                border-radius: 2px;
                border: none;
                outline: none !important;
                margin-left: 10px;
            }

                .table-title .btn i {
                    float: left;
                    font-size: 21px;
                    margin-right: 5px;
                }

                .table-title .btn span {
                    float: left;
                    margin-top: 2px;
                }

        table.table tr th, table.table tr td {
            border-color: #e9e9e9;
            padding: 12px 15px;
            vertical-align: middle;
        }

            table.table tr th:first-child {
                width: 60px;
            }

            table.table tr th:last-child {
                width: 100px;
            }

        table.table-striped tbody tr:nth-of-type(odd) {
            background-color: #fcfcfc;
        }

        table.table-striped.table-hover tbody tr:hover {
            background: #f5f5f5;
        }

        table.table th i {
            font-size: 13px;
            margin: 0 5px;
            cursor: pointer;
        }

        table.table td:last-child i {
            opacity: 0.9;
            font-size: 22px;
            margin: 0 5px;
        }

        table.table td a {
            font-weight: bold;
            color: #566787;
            display: inline-block;
            text-decoration: none;
            outline: none !important;
        }

            table.table td a:hover {
                color: #2196F3;
            }

            table.table td a.edit {
                color: #FFC107;
            }

            table.table td a.delete {
                color: #F44336;
            }

        table.table td i {
            font-size: 19px;
        }

        table.table .avatar {
            border-radius: 50%;
            vertical-align: middle;
            margin-right: 10px;
            display: inline-block;
        }

        .pagination {
            float: right;
            margin: 0 0 5px;
        }

            .pagination li a {
                border: none;
                font-size: 13px;
                min-width: 30px;
                min-height: 30px;
                color: #999;
                margin: 0 2px;
                line-height: 30px;
                border-radius: 2px !important;
                text-align: center;
                padding: 0 6px;
            }

                .pagination li a:hover {
                    color: #666;
                }

            .pagination li.active a, .pagination li.active a.page-link {
                background: #03A9F4;
            }

                .pagination li.active a:hover {
                    background: #0397d6;
                }

            .pagination li.disabled i {
                color: #ccc;
            }

            .pagination li i {
                font-size: 16px;
                padding-top: 6px;
            }

        .hint-text {
            float: left;
            margin-top: 10px;
            font-size: 13px;
        }
        /* Custom checkbox */
        .custom-checkbox {
            position: relative;
        }

            .custom-checkbox input[type="checkbox"] {
                opacity: 0;
                position: absolute;
                margin: 5px 0 0 3px;
                z-index: 9;
            }

            .custom-checkbox label:before {
                width: 18px;
                height: 18px;
            }

            .custom-checkbox label:before {
                content: '';
                margin-right: 10px;
                display: inline-block;
                vertical-align: text-top;
                background: white;
                border: 1px solid #bbb;
                border-radius: 2px;
                box-sizing: border-box;
                z-index: 2;
            }

            .custom-checkbox input[type="checkbox"]:checked + label:after {
                content: '';
                position: absolute;
                left: 6px;
                top: 3px;
                width: 6px;
                height: 11px;
                border: solid #000;
                border-width: 0 3px 3px 0;
                transform: inherit;
                z-index: 3;
                transform: rotateZ(45deg);
            }

            .custom-checkbox input[type="checkbox"]:checked + label:before {
                border-color: #03A9F4;
                background: #03A9F4;
            }

            .custom-checkbox input[type="checkbox"]:checked + label:after {
                border-color: #fff;
            }

            .custom-checkbox input[type="checkbox"]:disabled + label:before {
                color: #b8b8b8;
                cursor: auto;
                box-shadow: none;
                background: #ddd;
            }

        /*Modal styles*/


        .modal .modal-dialog {
            max-width: 500px;
        }

        .modal .modal-header, .modal .modal-body, .modal .modal-footer {
            padding: 20px 30px;
        }

        .modal .modal-content {
            border-radius: 3px;
        }

        .modal .modal-footer {
            background: #ecf0f1;
            border-radius: 0 0 3px 3px;
        }

        .modal .modal-title {
            display: inline-block;
        }

        .modal .form-control {
            border-radius: 2px;
            box-shadow: none;
            border-color: #dddddd;
        }

        .modal textarea.form-control {
            resize: vertical;
        }

        .modal .btn {
            border-radius: 2px;
            min-width: 100px;
        }

        .modal form label {
            font-weight: normal;
        }



        .nav-link.active.custom-color p {
            color: white;
            background-color: #0069d9;
        }


        div:where(.swal2-container).swal2-center > .swal2-popup {
            grid-column: 2;
            grid-row: 2;
            place-self: center center;
            width: 400px;
        }

        div:where(.swal2-container) .swal2-select {
            min-width: 48%;
            max-width: 90%;
            margin-right: 5px;
            padding: .375em .625em;
            background: rgba(0, 0, 0, 0);
            color: inherit;
            font-size: 1.125em;
            border: 1px solid green;
        }

        div:where(.swal2-container) .swal2-input {
            height: 2.625em;
            padding: 0 .75em;
            border: 1px solid green;
        }


        input, button, select, textarea {
            font-family: inherit;
            font-size: inherit;
            line-height: inherit;
            border: 1px solid green;
        }

    </style>
    <script>
        $(document).ready(function () {
            $('.nav-link').on('click', function () {
                
                $('.nav-link').removeClass('active');
        
                
                $(this).addClass('active');
        
               
                $('.nav-link').removeClass('custom-color');
        
             
                $(this).addClass('custom-color');
            });

           
            $('.nav-link.active').addClass('custom-color');
        });




    </script>
</head>
<body>

    <div class="container">

        <div class="table-responsive">
            <div class="table-wrapper">
                <ul class="nav nav-tabs" role="tablist">

                    <h3>Doctor Visit Type List</h3>

                    
                    
                        <li class="nav-item">
                            <a class="nav-link active" data-toggle="tab" href="#tabs-1" role="tab">
                                <p class="btn btn-light" id="btnShowAll">All</p>
                            </a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" data-toggle="tab" href="#tabs-2" role="tab">
                                <p class="btn btn-light" id="btnShowActive">Active</p>
                            </a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" data-toggle="tab" href="#tabs-3" role="tab">
                                <p class="btn btn-light" id="btnShowInactive">Inactive</p>
                            </a>
                        </li>
                    

                   


                    <li class="nav-item" style="float: right">
                        <button type="button" class="btn btn-primary" onclick="Add()" >
                            <i class="fa fa-plus fa-stack-2x" aria-hidden="true"></i>.
                        </button>
                    </li>

                </ul>
                                <div class="tab-content">
                        <div class="tab-pane active" id="tabs-1" role="tabpanel">



                            <p class="container">


                                <table class="table table-bordered table-hover" id="idshifttable">
                                   
                        <thead>
                            <tr>
                                <th>Visit ID</th>
                                <th>Name</th>
                                <th>Actions</th>
                                <th>Edit</th>
                            </tr>
                        </thead>
                        <tbody class="tbody"></tbody>
                    </table>
                            </p>

                        <br />


                            <div class="clearfix" style="float:right">


                                <a href="#" class="btn btn-primary btnPrevious" id="paginationPrevious">&laquo; Previous</a>
                                <a href="#" class="btn btn-primary btnNext" id="paginationNext">Next &raquo;</a>





                            </div>
                        <br />
                        <br />
                        <br />

                    </div>
                </div>


            </div>
        </div>




    <script>




        $(document).ready(function () {
            loadData('all');
        });

        var currentPage = 1;
        var currentStatus = 'all';
        var pageSize = 15;

        function loadData(status, page = 1) {
            var startIndex = (page - 1) * pageSize;
            var endIndex = startIndex + pageSize;

            $.ajax({
                url: "/DoctorVisitType/mGetDoctorLedgerTypeList",
                type: "POST",
                contentType: 'application/json;charset=utf-8',
                dataType: "json",
                success: function (result) {
                    var filteredData = filterDataByStatus(result, status);

                    filteredData.sort(function (a, b) {
                        return new Date(b.strVistID) - new Date(a.strVistID);
                    });

                    var slicedData = filteredData.slice(startIndex, endIndex);

                    var html = '';
                    $.each(slicedData, function (key, item) {
                        html += '<tr>';
                        html += '<td>' + item.strVistID + '</td>';
                        html += '<td> <div class="h-25 d-inline-block" style="width: 550px;"> ' + item.strName + '</div></td>';
                        html += '<td>' + item.strActions + '</td>';
                        html += '<td><a href="#" class="btnUpdateBtn" data-vist-id="' + item.strVistID + '" data-Name-id="' + item.strName + '" data-Actions-id="' + item.strActions + '"><button type="button" class="btn btn-primary"><i class="fa fa-pencil" aria-hidden="true"></i></button></a></td>';
                        html += '</tr>';
                    });

                    $('.tbody').html(html);

                    updatePaginationControls(page, filteredData.length);
                },
                error: function (errormessage) {
                    alert(errormessage.responseText);
                }
            });
        }

            function filterDataByStatus(data, status) {
                if (status === 'Active') {
                    return data.filter(item => item.strActions === 'Active');
                } else if (status === 'Inactive') {
                    return data.filter(item => item.strActions === 'Inactive');
                } else {
                    return data;
                }
            }

            function updatePaginationControls(currentPage, totalItems) {
                var totalPages = Math.ceil(totalItems / pageSize);
                $('#paginationPrevious').prop('disabled', currentPage === 1);
                $('#paginationNext').prop('disabled', currentPage === totalPages);
            }

            $('#btnShowAll').on('click', function () {
                currentStatus = 'all';
                currentPage = 1;
                loadData(currentStatus, currentPage);
            });

            $('#btnShowActive').on('click', function () {
                currentStatus = 'Active';
                currentPage = 1;
                loadData(currentStatus, currentPage);
            });

            $('#btnShowInactive').on('click', function () {
                currentStatus = 'Inactive';
                currentPage = 1;
                loadData(currentStatus, currentPage);
            });

            function updatePaginationControls(currentPage, pageSize, totalItems) {
                var totalPages = Math.ceil(totalItems / pageSize);



                $('#paginationPrevious').prop('disabled', currentPage === 1);
                $('#paginationNext').prop('disabled', currentPage === totalPages);
            }




            $('#btnShowAll').on('click', function () {
                loadData('all');
            });


            $('#paginationPrevious').on('click', function () {

                currentPage--;
                loadData(currentStatus, currentPage);
            });

            $('#paginationNext').on('click', function () {

                currentPage++;
                loadData(currentStatus, currentPage);
            });





            $('#btnShowAll').on('click', function () {
                currentStatus = 'all';
                currentPage = 1;
                loadData(currentStatus, currentPage);
            });


            $('#paginationPrevious').on('click', function () {
                if (currentPage > 1) {
                    currentPage--;
                    loadData(currentStatus, currentPage);
                }
            });

            $('#paginationNext').on('click', function () {

                var totalPages = calculateTotalPages();

                if (currentPage < totalPages) {
                    currentPage++;
                    loadData(currentStatus, currentPage);
                }
            });




            $('#idshifttable tbody').on('click', '.delete', function () {
                alert("dd");
                var id = $(this).attr('id');


            });


          
            $(document).on("click", ".btnAdd", function() {
                Add();
            });

            
            function Add() {
                $('#btnAdd').show();

                Swal.fire({
                    title: 'Add Information',
                    html: '<div>Type Name: <input id="swal-input1" class="swal2-input" placeholder="FirstVisit"></div>' +
                        '<div>Actions : <select id="swal-input2" class="swal2-select">' +
                        '<option value="Active">Active</option>' +
                        '<option value="Inactive">Inactive</option>' +
                        '</select></div>',
                    inputPlaceholder: 'Select action',
                    showCancelButton: true,
                    confirmButtonText: 'Save',
                    cancelButtonText: 'Cancel',
                    preConfirm: () => {
                        const typeName = document.getElementById('swal-input1').value.trim();
                const actions = document.getElementById('swal-input2').value.trim();

                
                if (!typeName) {
                    return Swal.showValidationMessage('Type Name is required');
                } else if (!/[a-zA-Z]/.test(typeName)) {
                    return Swal.showValidationMessage('Type Name should contain at least one alphabet character');
                }

               
                if (!actions) {
                    return Swal.showValidationMessage('Actions is required');
                }

                return { typeName: typeName, actions: actions };
            }
        }).then((result) => {
            if (result.isConfirmed) {
                var typeName = result.value.typeName;
        var actions = result.value.actions;

        
        $.ajax({
            url: "/DoctorVisitType/mPostDoctorVisitType",
            data: JSON.stringify({ strName: typeName, strActions: actions }),
            type: "POST",
            contentType: "application/json;charset=utf-8",
            success: function (response) {
                Swal.fire({
                    title: "Success!",
                    text: "Doctor visit type added successfully!",
                    icon: "success"
                }).then(() => {
                    location.reload();
            });
        },
        error: function (errormessage) {
            Swal.fire({
                icon: 'error',
                title: 'Error',
                text: 'An error occurred while adding the doctor visit type.',
            });
        }
        });
        }
        });
        }



        $(document).on("click", ".btnUpdateBtn", function () {
            var vistID = $(this).data("vist-id"); 
            var Name = $(this).data("name-id"); 
            var Actions = $(this).data("actions-id"); 

            Swal.fire({
                title: 'Update Information',
                html: '<div>Type Name: <input id="swal-input1" class="swal2-input" placeholder="Input text" value="' + Name + '"></div>' +
            
                    '<div>Actions:  <select id="swal-input2" class="swal2-select">'  +
                    '<option value="Active"' + (Actions === "Active" ? ' selected' : '') + '>Active</option>' +
                    '<option value="Inactive"' + (Actions === "Inactive" ? ' selected' : '') + '>Inactive</option>' +
                    '</select></div>',
                inputPlaceholder: 'Select action',
                showCancelButton: true,
                confirmButtonText: 'Update',
                cancelButtonText: 'Cancel',
                preConfirm: () => {
                    const typeName = document.getElementById('swal-input1').value;
            const actions = document.getElementById('swal-input2').value;

            if (!typeName) {
                return Swal.showValidationMessage('Type Name is required');
            } else if (!/[a-zA-Z]/.test(typeName)) {
                return Swal.showValidationMessage('Type Name should contain at least one alphabet character');
            }

            if (!actions) {
                return Swal.showValidationMessage('Actions is required');
            }

            return { typeName: typeName, actions: actions };
        }
        }).then((result) => {
            if (result.isConfirmed) {
            var typeName = result.value.typeName;
        var actions = result.value.actions;

        $.ajax({
            url: "/DoctorVisitType/mUpdateDoctotVisitType",
            type: "POST",
            data: JSON.stringify({ strVistID: vistID, strActions: actions, strName: typeName }),
            contentType: 'application/json;charset=utf-8',
            success: function (response) {
                Swal.fire({
                    title: "Success!",
                    text: "Action updated successfully!",
                    icon: "success"
                }).then(() => {
                    location.reload();
            });
        },
        error: function (err) {
            Swal.fire({
                title: "Error!",
                text: "Error updating action: " + err.responseText,
                icon: "error"
            });
        }
        });
        }
        });
        });





    </script>


</body>
</html>
